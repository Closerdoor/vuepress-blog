(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{484:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),s("h3",{attrs:{id:"遍历对象-for-in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历对象-for-in"}},[t._v("#")]),t._v(" 遍历对象 for...in")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"删除对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除对象属性"}},[t._v("#")]),t._v(" 删除对象属性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"对象方法汇总"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象方法汇总"}},[t._v("#")]),t._v(" 对象方法汇总")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断两个值是否为同一个值 | 返回true/false")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("freeze")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 冻结一个对象 | 返回该对象")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("sources"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//归并对象 | 返回target对象")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回由key组成的字符串数组")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回true/false")]),t._v("\n")])])]),s("h3",{attrs:{id:"object-is-判断两个值是否为同一个值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-is-判断两个值是否为同一个值"}},[t._v("#")]),t._v(" Object.is()  判断两个值是否为"),s("strong",[t._v("同一个值")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object.is() 方法判断两个值是否为同一个值。如果满足以下条件则两个值相等:")]),t._v("\n都是 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n都是 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n都是 "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" 或 "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n都是相同长度的字符串且相同字符按相同顺序排列\n都是相同对象（意味着每个对象有同一个引用）\n都是数字且\n都是 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n都是 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n都是 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n或都是非零而且非 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" 且为同一个值\n与"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" 运算不同。  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("运算符在判断相等前对两边的变量")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如果它们不是同一类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("进行强制转换")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("这种行为的结果会将 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 判断为 "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 而 Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is不会强制转换两边的值。\n\n与"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" 运算也不相同。 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("运算符")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("也包括 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" 运算符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 将数字 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 和 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 视为相等 ，而将Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" 与"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("视为不相等"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h3",{attrs:{id:"object-freeze-冻结一个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-freeze-冻结一个对象"}},[t._v("#")]),t._v(" Object.freeze() 冻结一个对象")]),t._v(" "),s("h3",{attrs:{id:"object-assign-target-sources-返回target对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-assign-target-sources-返回target对象"}},[t._v("#")]),t._v(" Object.assign(target, ...sources)  返回target对象")]),t._v(" "),s("h3",{attrs:{id:"object-keys-obj-返回由key组成的字符串数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-keys-obj-返回由key组成的字符串数组"}},[t._v("#")]),t._v(" Object.keys(obj) 返回由key组成的字符串数组")]),t._v(" "),s("h3",{attrs:{id:"obj-hasownproperty-propname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#obj-hasownproperty-propname"}},[t._v("#")]),t._v(" obj.hasOwnProperty(propname)")]),t._v(" "),s("p",[t._v("查找一个对象是否有某个属性，不会去查找它的原型链。如果有返回true，反之返回false。")])])}),[],!1,null,null,null);s.default=e.exports}}]);