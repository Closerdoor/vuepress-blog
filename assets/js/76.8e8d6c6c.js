(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{497:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"需要先安装node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需要先安装node-js"}},[t._v("#")]),t._v(" 需要先安装node.js")]),t._v(" "),s("h2",{attrs:{id:"安装-typescript-编译器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-typescript-编译器"}},[t._v("#")]),t._v(" 安装 "),s("code",[t._v("TypeScript")]),t._v(" 编译器")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("NPM")]),t._v(" 包管理工具安装 "),s("code",[t._v("TypeScript")]),t._v(" 编译器")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" typescript\n")])])]),s("p",[t._v("安装完成以后，我们可以通过命令 "),s("code",[t._v("tsc")]),t._v(" 来调用编译器")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前 tsc 编译器版本")]),t._v("\ntsc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n")])])]),s("h2",{attrs:{id:"编译执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译执行"}},[t._v("#")]),t._v(" 编译执行")]),t._v(" "),s("p",[t._v("使用我们安装的 "),s("code",[t._v("TypeScript")]),t._v(" 编译器 "),s("code",[t._v("tsc")]),t._v(" 对 "),s("code",[t._v(".ts")]),t._v(" 文件进行编译")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("tsc ./src/test.ts\n")])])]),s("p",[t._v("默认情况下会在当前文件所在目录下生成同名的 "),s("code",[t._v("js")]),t._v(" 文件")]),t._v(" "),s("h2",{attrs:{id:"编译配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译配置文件"}},[t._v("#")]),t._v(" 编译配置文件")]),t._v(" "),s("p",[t._v("我们可以把编译的一些选项保存在一个指定的 "),s("code",[t._v("json")]),t._v(" 文件中，默认情况下 "),s("code",[t._v("tsc")]),t._v(" 命令运行的时候会自动去加载运行命令所在的目录下的 "),s("code",[t._v("tsconfig.json")]),t._v(" 文件，配置文件格式如下")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compilerOptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outDir"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./dist"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定编译文件输出目录")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"target"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES2015"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定编译的代码版本目标，默认为 `ES3`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"watch"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在监听模式下运行，当文件发生改变的时候自动编译")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ** : 所有目录（包括子目录）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// * : 所有文件，也可以指定类型 *.ts")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"include"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/**/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("有了单独的配置文件，我们就可以直接运行")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("tsc\n")])])]),s("h3",{attrs:{id:"指定加载的配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定加载的配置文件"}},[t._v("#")]),t._v(" 指定加载的配置文件")])])}),[],!1,null,null,null);s.default=r.exports}}]);